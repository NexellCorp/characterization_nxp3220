*****************************************
*	download			*
*****************************************

$ mkdir nxp3220_asv

$ cd nxp3220_asv


$ repo init -u ssh://{USER_NAME}k@git.nexell.co.kr:29418/characterization/manifest

$ repo sync

*****************************************
*	build				*
*****************************************

전체 빌드

$ characterization/scripts/build_bsp.sh -f characterization/scripts/build.nxp3220-vtk-asv-bus.sh

result 폴더에 결과물 이 생김.


부분 빌드
$ characterization/scripts/build_bsp.sh -f characterization/scripts/build.nxp3220-vtk-asv-bus.sh <bl1 br2 kernel...>
  bl1	 : bl1, bl2, bl32를 result 에 적용
  uboot	 : u-boot build
  br2	 : buildroot 를 빌드, rootfs를 생성.
  kernel : kernel Iamge 빌드, zImage 생서.
  dtb	 : device tree 빌드.
  bootimg: boot.img 생성. emmc 에 퓨징 하기 위한 파일
  params : uboot env 생성.
  root   : emmc 용 ext4 filesystem 생성.
		  
		   

*****************************************
*	Fusing				*
*****************************************

usb boot

$ characterization/scripts/usb-down.sh -f characterization/scripts/udown.nxp3220-vtk-boot.sh -p


emmc boot fusing

BOARD  u-boot
$ fastboot 0

Host pc

전체 fusing
$ characterization/scripts/partmap_fastboot.sh -f characterization/files/partmap_emmc_asv_devfreq.txt

부분 fusing

$ characterization/scripts/partmap_fastboot.sh -f characterization/files/partmap_emmc_asv_devfreq.txt <boot, bl1, ....>

  bl1  : bl1 image fusing.
  bl2  : bl2 image fusing.
  bl32 : bl32 image fusing.
  bootloader : u-boot fusing.
  env  : u-boot enviroment fusing.
  boot : boot.img zImage & dtb 
  root1/root2 : emmc에 file system fusing.


